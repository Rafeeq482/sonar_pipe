name: Deploy SonarQube

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TERRAFORM_WORKSPACE: default
      TF_VAR_key_name: newacc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.5

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve

      - name: Extract SonarQube Public IP from Terraform
        run: |
          echo "==== STEP 1: RAW Terraform Output ===="
          RAW_OUTPUT=$(terraform -chdir=terraform output -raw sonarqube_public_ip -no-color 2>/dev/null || true)
          echo "$RAW_OUTPUT" | cat -v

          echo "==== STEP 2: Remove Non-Printable & Hidden Chars ===="
          CLEAN_OUTPUT=$(echo "$RAW_OUTPUT" | tr -cd '0-9.\n')
          echo "After cleaning: $CLEAN_OUTPUT"

          echo "==== STEP 3: Extract Pure IP ===="
          INSTANCE_IP=$(echo "$CLEAN_OUTPUT" | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n 1)

          if [ -z "$INSTANCE_IP" ]; then
            echo "ERROR: Could not extract instance IP"
            exit 1
          fi

          echo "Final IP: $INSTANCE_IP"
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible python3-psycopg2

      - name: Setup SSH key
        run: |
          echo "${{ secrets.NEWACC_PRIVATE_KEY }}" > newacc.pem
          chmod 600 newacc.pem

      - name: Run Ansible Playbook
        run: |
          echo "Running Ansible on ${{ env.INSTANCE_IP }}"
          ansible-playbook -i "${{ env.INSTANCE_IP }}," --private-key newacc.pem --user ubuntu ansible/install-sonarqube.yml

      # CLEANUP STEP - runs only if any previous step fails
      - name: Cleanup AWS resources
        if: failure()
        run: |
          echo "Pipeline failed â€” cleaning up EC2 and security group..."
          terraform -chdir=terraform destroy -auto-approve
